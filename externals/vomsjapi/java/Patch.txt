Version 1.7.22

---------------------------------------------------------------
Patch : org\glite\voms\contact\VOMSProxyInit.java
> comment line 262 : validateACs( ACs );
>> else error :

Exception in thread "main" org.ogf.saga.error.NoSuccessException: NoSuccessException: org.glite.voms.contact.VOMSException: Error communicating with server lcg-voms.cern.ch:15004:Authentication failed [Caused by: Failure unspecified at GSS-API level [Caused by: Unknown CA]]
        at fr.in2p3.jsaga.impl.context.ContextImpl.init(ContextImpl.java:175)
        at fr.in2p3.jsaga.command.ContextInit.main(ContextInit.java:58)
Caused by: org.glite.voms.contact.VOMSException: Error communicating with server lcg-voms.cern.ch:15004:Authentication failed [Caused by: Failure unspecified at
 GSS-API level [Caused by: Unknown CA]]
        at org.glite.voms.contact.VOMSProxyInit.contactServer(VOMSProxyInit.java:353)
        at org.glite.voms.contact.VOMSProxyInit.getVomsAC(VOMSProxyInit.java:131)
        at org.glite.voms.contact.VOMSProxyInit.getVomsProxy(VOMSProxyInit.java:256)
        at fr.in2p3.jsaga.adaptor.security.VOMSSecurityAdaptor.createSecurityCredential(VOMSSecurityAdaptorExtended.java:152)
        at fr.in2p3.jsaga.impl.context.ContextImpl.init(ContextImpl.java:173)
        ... 1 more
Caused by: org.globus.common.ChainedIOException: Authentication failed [Caused by: Failure unspecified at GSS-API level [Caused by: Unknown CA]]
        at org.globus.gsi.gssapi.net.GssSocket.startHandshake(GssSocket.java:147)
        at org.globus.gsi.gssapi.net.GssSocket.getOutputStream(GssSocket.java:162)
        at org.glite.voms.contact.VOMSSocket.getOutputStream(VOMSSocket.java:182)
        at org.glite.voms.contact.VOMSProxyInit.contactServer(VOMSProxyInit.java:342)
        ... 5 more

---------------------------------------------------------------
Patch : org\glite\voms\contact\UserCredentials.java
> private UserCredentials( String keyPassword ) : not use the default locations
comment lines
> private UserCredentials( String keyPassword ) : not use the selected values for PKCS12 certificates
pkcs12File = new File(pkcs12UserCert);
> private UserCredentials( String keyPassword ) : throw exception in case of failure during creating proxy
throw e;
> in loadPKCS12Credential() : does not get UserChain because generate ClassCastException ! 
>> set userchain to usercertificates
userChain = new X509Certificate[1];
userChain[0] = userCert;


---------------------------------------------------------------
Patch : org\glite\voms\contact\VOMSProxyBuilder.java
> proxyType not used in public static GlobusCredential buildProxy( UserCredentials cred, int lifetime, int proxyType) {
public static GlobusCredential buildProxy( UserCredentials cred, int lifetime, int delegationMode  ) 
return factory.createCredential(cred.getUserChain(),  cred.getUserKey().getPrivateKey(),512, lifetime, GSIConstants.DELEGATION_FULL );
to return factory.createCredential(cred.getUserChain(),  cred.getUserKey().getPrivateKey(),512, lifetime, delegationMode);

>> modify public static GlobusCredential buildProxy (UserCredentials cred){
return buildProxy( cred, 3600, DEFAULT_PROXY_TYPE );
to return buildProxy( cred, 3600, DEFAULT_DELEGATION_TYPE);

> modify private void loadPKCS12Credentials(File pkcs12File, String keyPassword) to find the first certificate with a private key
instead of the first certificate.

>> modify org\glite\voms\contact\VOMSProxyInit.java :
protected GlobusCredential getGridProxy() :
GlobusCredential proxy = VOMSProxyBuilder.buildProxy( userCredentials, proxyLifetime, proxyType );
to GlobusCredential proxy = VOMSProxyBuilder.buildProxy( userCredentials, proxyLifetime, delegationType );

>> modify org\glite\voms\contact\VOMSSocket.java

int proxyType = VOMSProxyBuilder.DEFAULT_PROXY_TYPE;
to int delegationType = VOMSProxyBuilder.DEFAULT_DELEGATION_TYPE ;
protected void connect(String host, int port) throws GSSException, IOException, GeneralSecurityException{
proxy = VOMSProxyBuilder.buildProxy( cred, VOMSProxyBuilder.DEFAULT_PROXY_LIFETIME, proxyType);
to proxy = VOMSProxyBuilder.buildProxy( cred, VOMSProxyBuilder.DEFAULT_PROXY_LIFETIME, delegationType);

private VOMSSocket(UserCredentials cred, String hostDN, int proxyType){
       	this.cred = cred;
        this.hostDN = hostDN;
        this.proxyType = proxyType;
    }

to

private VOMSSocket(UserCredentials cred, String hostDN, int delegationType ){ 
        this.cred = cred;
        this.hostDN = hostDN;
        this.delegationType = delegationType ;
    }

>> modify
return new VOMSSocket(cred, hostDN, VOMSProxyBuilder.DEFAULT_PROXY_TYPE);
to return new VOMSSocket(cred, hostDN, VOMSProxyBuilder.DEFAULT_DELEGATION_TYPE);
