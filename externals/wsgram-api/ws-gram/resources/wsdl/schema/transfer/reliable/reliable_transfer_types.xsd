<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Portions of this file Copyright 1999-2005 University of Chicago
  Portions of this file Copyright 1999-2005 The University of Southern California.
  
  This file or a portion of this file is licensed under the
  terms of the Globus Toolkit Public License, found at
  http://www.globus.org/toolkit/download/license.html.
  If you redistribute this file, with or without
  modifications, you must include this notice in the file.
-->
<xsd:schema
    targetNamespace="http://www.globus.org/namespaces/2004/10/rft"
    xmlns:tns="http://www.globus.org/namespaces/2004/10/rft"
    xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/03/addressing"
    attributeFormDefault="qualified"
    elementFormDefault="qualified"
    xmlns:wsbf="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <xsd:import schemaLocation="../../ws/addressing/WS-Addressing.xsd" 
        namespace="http://schemas.xmlsoap.org/ws/2004/03/addressing"/>
    <xsd:import schemaLocation="../../wsrf/faults/WS-BaseFaults.xsd"
        namespace="http://docs.oasis-open.org/wsrf/2004/06/wsrf-WS-BaseFaults-1.2-draft-01.xsd"/>
    
    <xsd:element name="fault" type="wsbf:BaseFaultType"/>

    <xsd:simpleType name="TransferStatusTypeEnumeration">
    <xsd:annotation>
        <xsd:documentation>
           Enumeration of different status a transfer can have
        </xsd:documentation>
    </xsd:annotation>
        <xsd:restriction base="xsd:string">
        <xsd:enumeration value="Finished"/>
        <xsd:enumeration value="Retrying"/>
        <xsd:enumeration value="Failed"/>
        <xsd:enumeration value="Active"/>
        <xsd:enumeration value="Pending"/>
        <xsd:enumeration value="Cancelled"/>
        <xsd:enumeration value="Expanding"/>
        <xsd:enumeration value="Expanding_Done"/>
        <xsd:enumeration value="Dirty"/>
    </xsd:restriction>
    </xsd:simpleType>
	
	<xsd:simpleType name="RequestStatusTypeEnumeration">
        <xsd:annotation>
        <xsd:documentation>
            Enumeration of Status of Transfer Request
        </xsd:documentation>
        </xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Pending"/>
			<xsd:enumeration value="Active"/>
			<xsd:enumeration value="Done"/>
			<xsd:enumeration value="Failed"/>
			<xsd:enumeration value="Cancelled"/>
		</xsd:restriction>
	</xsd:simpleType>
		
    <xsd:complexType name="TotalBytesTransferredResource">
    <xsd:annotation>
    <xsd:documentation>
        Type representing total number of bytes transferred in a
        RFT Resource
    </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
        <xsd:element name="totalBytes" type="xsd:long"/>
    </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="TotalTimeTakenResource">
    <xsd:annotation>
    <xsd:documentation>
        Type representing total time taken transferrind above mentioned
        TotalByteTransferredResource
    </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
    <xsd:element name="timeTaken" type="xsd:long"/>
    </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OverallStatus">
        <xsd:annotation>
        <xsd:documentation>
            Type representing overall status of a RFT resource in the form of 
            number of transfers done/active/failed/retrying/cancelled
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="transfersFinished" type="xsd:int"/>
            <xsd:element name="transfersRestarted" type="xsd:int"/>
            <xsd:element name="transfersFailed" type="xsd:int"/>
            <xsd:element name="transfersActive" type="xsd:int"/>
            <xsd:element name="transfersPending" type="xsd:int"/>
            <xsd:element name="transfersCancelled" type="xsd:int"/>
            <xsd:element name="fault" type="tns:RFTFaultResourcePropertyType" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    
	<xsd:complexType name="RequestStatusType">
        <xsd:annotation>
        <xsd:documentation>
            Complex Type representing status of a RFT Resource along with Fault
            information for failed transfers.
        </xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="requestStatus" type="tns:RequestStatusTypeEnumeration"/>
            <xsd:element name="fault" type="tns:RFTFaultResourcePropertyType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
    
    <xsd:complexType name="RFTOptionsType">
        <xsd:annotation>
        <xsd:documentation>
            Type representing various options one can set at transfer and 
            request level.ignoreFilePermErr when set will force RFT to ignore
            errors that occur while setting/getting file permissions.
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <!-- true=binary false=ascii -->
            <xsd:element name="binary" 
                        type="xsd:boolean"
                        minOccurs="0"
                        maxOccurs="1"/>
            <!-- blockSize in bytes -->
            <xsd:element name="blockSize" 
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <!-- tcpBufferSize in bytes -->
            <xsd:element name="tcpBufferSize" 
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="notpt" 
                        type="xsd:boolean"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="parallelStreams" 
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <!-- DataChannelAuthentication -->
            <xsd:element name="dcau" 
                        type="xsd:boolean"
                        minOccurs="0"
                        maxOccurs="1"/>
            <!-- By default host authz is performed grid subjectName to be used 
            on both source and dest gftp servers for authz-->
            <xsd:element name="subjectName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="destinationSubjectName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="sourceSubjectName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
            <!-- username to be used to perform transfer. By default username
            from gridmap lookup is used -->
            <xsd:element name="userName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="ignoreFilePermErr"
                        type="xsd:boolean"
                        minOccurs="0"
                        maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DeleteOptionsType">
        <xsd:annotation>
        <xsd:documentation>
            Type representing various options one can set on a 
            DeleteType.
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
        <!-- subjectName to be used for authorization, by default host authz
        is performed -->
            <xsd:element name="subjectName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="userName" 
                        type="xsd:string"
                        minOccurs="0"
                        maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="TransferType">
        <xsd:annotation>
        <xsd:documentation>
            Type representing a single transfer along with various options that
            can be set on a transfer. retry_time is time when a particular 
            transfer is retried.
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="transferId" 
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="sourceUrl" type="xsd:string"/>
            <xsd:element name="destinationUrl" type="xsd:string"/>
            <xsd:element name="status" 
                        type="tns:TransferStatusTypeEnumeration"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="attempts" 
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="retry_time" 
                        type="xsd:long"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="rftOptions" 
                        type="tns:RFTOptionsType" 
                        minOccurs="0" 
                        maxOccurs="1"/>
            <xsd:element name="size" 
                        type="xsd:long"
                        minOccurs="0"
                        maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="DeleteType">
        <xsd:annotation>
        <xsd:documentation>
            Type representing a file that needs to be deleted
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="transferId" type="xsd:int" 
                                        minOccurs="0"
                                        maxOccurs="1"/>
            <xsd:element name="file" type="xsd:string"/>
            <xsd:element name="deleteOptions" 
                        type="tns:DeleteOptionsType"
                        minOccurs="0"
                        maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

                        
	<xsd:simpleType name="TransferJobTypeEnumeration">
        <xsd:annotation>
        <xsd:documentation>
            Enumeration of different transfer job types
        </xsd:documentation>
        </xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="transfer"/>
			<xsd:enumeration value="delete"/>
		</xsd:restriction>
	</xsd:simpleType>

    <xsd:complexType name="BaseRequestType">
        <xsd:annotation>
        <xsd:documentation>
            Base Request Type from which TransferRequestType and DeleteRequest
            Type are derived. Concurrency is the number of transfers done simul-
            taneously. maxAttempts denotes the number of attempts after which 
            RFT marks a transfer as failed. finishBy (not implemented yet) 
            represents the time by which this request should be finished. 
            transferCredentialEndpoint represents EPR of delegation resource 
            that holds the delegated credential for this resource.
        </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="concurrency"
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="maxAttempts"
                        type="xsd:int"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="finishBy"
                        type="xsd:dateTime"
                        minOccurs="0"
                        maxOccurs="1"/>
            <xsd:element name="transferCredentialEndpoint" 
                        type="wsa:EndpointReferenceType"
                        minOccurs="0"
                        maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    
    <xsd:complexType name="TransferRequestType">
        <xsd:annotation>
            <xsd:documentation>
                This type represents transfer requests. RFTOptionsType are all 
                the options you can set on a gridftp transfer (like Tcp Buffer 
                Size etc ). allOrNone if set will force RFT to clean up all the
                files that are transferred already if one of the transfer fails.

            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="tns:BaseRequestType">
                <xsd:sequence>
                    <xsd:element name="transfer" 
                            type="tns:TransferType" 
                            minOccurs="1" 
                            maxOccurs="unbounded"/>
                    <xsd:element name="rftOptions" 
                            type="tns:RFTOptionsType" 
                            minOccurs="0" 
                            maxOccurs="1"/>
			        <xsd:element name="allOrNone"
					    	type="xsd:boolean"
						    minOccurs="0"
						    maxOccurs="1"/>
                </xsd:sequence>
            </xsd:extension>
            </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="DeleteRequestType">
        <xsd:annotation>
            <xsd:documentation>
                This type is used to submit transfers that need to be deleted
            </xsd:documentation>
        </xsd:annotation>
         <xsd:complexContent>
            <xsd:extension base="tns:BaseRequestType">
                <xsd:sequence>
                    <xsd:element name="deletion" 
                             type="tns:DeleteType"
                            minOccurs="1"
                            maxOccurs="unbounded"/>
                    <xsd:element name="deleteOptions"
                                type="tns:DeleteOptionsType"
                                minOccurs="0"
                                maxOccurs="1"/>
                            
                </xsd:sequence>
            </xsd:extension>
           </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="transferRequest" type="tns:TransferRequestType"/>
    <xsd:element name="deleteRequest" type="tns:DeleteRequestType"/>

	<xsd:complexType name="TransferStatusType">
        <xsd:annotation>
        <xsd:documentation>
            Type representing status of a single transfer
        </xsd:documentation>
        </xsd:annotation>
		<xsd:sequence>
			<xsd:element name="sourceUrl" type="xsd:string"/>
			<xsd:element name="destinationUrl" type="xsd:string"/>
			<xsd:element name="attempts" type="xsd:int"/>
			<xsd:element name="status" type="tns:TransferStatusTypeEnumeration"/>
            <xsd:element name="fault" type="tns:RFTFaultResourcePropertyType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

<!-- RFT Faults -->

<xsd:complexType name="RepeatedlyStartedFaultType">
    <xsd:annotation>
      <xsd:documentation>
        This fault indicates that the start method of the RFT 
        service could not run because the job had already been started.
        This is not a terminal fault.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>

<xsd:complexType name="RFTDatabaseFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown whenever there is an exception during inserting,
        updating,deleting,getting information from database.This can be a 
        terminal fault if thrown at the resource level and non-terminal at the 
        transfer level.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="RFTAuthorizationFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown for Authz Faults. Terminal for resource 
        if happens at the resource creation and terminal for transfer.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="RFTAuthenticationFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown for Authz Faults. Terminal for resource if
        happens at resource creation and terminal for transfer.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="TransferFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown for terminal transfer Faults. This is included
        in RequestStatusType and TransferStatusType. Terminal Transfer faults 
        include exceeding the number of maximum retries, Malformed URLs.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="TransferTransientFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown for non-terminal transfer Faults. This is included
        in RequestStatusType and TransferStatusType. All exceptions for which 
        RFT is going to retry a transfer come under this.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="DelegationEPRMissingFaultType">
    <xsd:annotation>
        <xsd:documentation>
        This fault is thrown when the request does not have a 
        EPR for Delegation Cred. Terminal Error.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
        <xsd:extension base="wsbf:BaseFaultType"/>
    </xsd:complexContent>
</xsd:complexType>

<xsd:complexType name="RFTFaultResourcePropertyType">
    <xsd:choice>
        <xsd:element name="rftRepeatedlyStartedFaultType" type="tns:RepeatedlyStartedFaultType"/>
        <xsd:element name="delegationEPRMissingFaultType" type="tns:DelegationEPRMissingFaultType"/>
        <xsd:element name="rftDatabaseFaultType" type="tns:RFTDatabaseFaultType"/>
        <xsd:element name="rftAuthenticationFaultType" type="tns:RFTAuthenticationFaultType"/>
        <xsd:element name="rftAuthorizationFaultType" type="tns:RFTAuthorizationFaultType"/>
        <xsd:element name="rftTransferFaultType" type="tns:TransferFaultType"/>
        <xsd:element name="transferTransientFaultType" type="tns:TransferTransientFaultType"/>
    </xsd:choice>
</xsd:complexType>
</xsd:schema>
