<?xml version="1.0"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:lb="http://glite.org/wsdl/services/lb" xmlns:lbe="http://glite.org/wsdl/elements/lb" xmlns:lbt="http://glite.org/wsdl/types/lb" name="LoggingAndBookkeeping" targetNamespace="http://glite.org/wsdl/services/lb">
  <documentation>CVS revision:  $Header: /cvs/gridpub/jsaga/externals/wms-api/resources/wsdl/Attic/LB.wsdl,v 1.1 2008/12/11 15:11:41 sreynaud Exp $  

	</documentation>
  <import namespace="http://glite.org/wsdl/services/lb" location="LBTypes.wsdl"/>
  <types>
    <xsd:schema targetNamespace="http://glite.org/wsdl/elements/lb" elementFormDefault="unqualified" attributeFormDefault="unqualified">
      <xsd:element name="GetVersion">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="dummy" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetVersionResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="version" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="JobStatus">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="jobid" type="xsd:string" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="flags" type="lbt:jobFlags" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="JobStatusResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="stat" type="lbt:jobStatus" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="UserJobs">
        <xsd:complexType>
          <xsd:sequence/>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="UserJobsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="jobs" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
            <xsd:element name="states" type="lbt:jobStatus" minOccurs="1" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="QueryJobs">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="conditions" type="lbt:queryConditions" minOccurs="1" maxOccurs="unbounded"/>
            <xsd:element name="flags" type="lbt:jobFlags" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="QueryJobsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="jobs" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
            <xsd:element name="states" type="lbt:jobStatus" minOccurs="1" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="QueryEvents">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="jobConditions" type="lbt:queryConditions" minOccurs="1" maxOccurs="unbounded"/>
            <xsd:element name="eventConditions" type="lbt:queryConditions" minOccurs="1" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="QueryEventsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="events" type="lbt:event" minOccurs="1" maxOccurs="unbounded"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="genericFault" type="lbt:genericFault"/>
    </xsd:schema>
  </types>
  <message name="genericFault">
    <part name="genericFault" element="lbe:genericFault"/>
  </message>
  <message name="GetVersionRequest">
    <part name="input" element="lbe:GetVersion">
      <documentation>
			Return version of the service.
			</documentation>
    </part>
  </message>
  <message name="GetVersionResponse">
    <part name="output" element="lbe:GetVersionResponse">
      <documentation>
			Return version of the service.
			</documentation>
    </part>
  </message>
  <message name="JobStatusRequest">
    <part name="input" element="lbe:JobStatus">
      <documentation>
			Query state of a single job.
			</documentation>
    </part>
  </message>
  <message name="JobStatusResponse">
    <part name="output" element="lbe:JobStatusResponse">
      <documentation>
			Query state of a single job.
			</documentation>
    </part>
  </message>
  <message name="UserJobsRequest">
    <part name="input" element="lbe:UserJobs">
      <documentation>
			Simplified query, return all jobs of the authenticated user.
			</documentation>
    </part>
  </message>
  <message name="UserJobsResponse">
    <part name="output" element="lbe:UserJobsResponse">
      <documentation>
			Simplified query, return all jobs of the authenticated user.
			</documentation>
    </part>
  </message>
  <message name="QueryJobsRequest">
    <part name="input" element="lbe:QueryJobs">
      <documentation>
			Retrieve a list of jobs, including their states, based on query conditions.
			The conditions take the form of a list of lists.
			Elements of the inner lists refer to a single job attribute, the conditions are or-ed.
			Elements of the outer list may refer to different job attributes, they are and-ed.

			</documentation>
    </part>
  </message>
  <message name="QueryJobsResponse">
    <part name="output" element="lbe:QueryJobsResponse">
      <documentation>
			Retrieve a list of jobs, including their states, based on query conditions.
			The conditions take the form of a list of lists.
			Elements of the inner lists refer to a single job attribute, the conditions are or-ed.
			Elements of the outer list may refer to different job attributes, they are and-ed.

			</documentation>
    </part>
  </message>
  <message name="QueryEventsRequest">
    <part name="input" element="lbe:QueryEvents">
      <documentation>
			Retrieve events matching a query.
			There are two sets of conditions, on jobs and on individual events, both have to be satisfied.
			Both query conditions have the same format as in QueryJobs.

			</documentation>
    </part>
  </message>
  <message name="QueryEventsResponse">
    <part name="output" element="lbe:QueryEventsResponse">
      <documentation>
			Retrieve events matching a query.
			There are two sets of conditions, on jobs and on individual events, both have to be satisfied.
			Both query conditions have the same format as in QueryJobs.

			</documentation>
    </part>
  </message>
  <portType name="LoggingAndBookkeepingPortType">
    <operation name="GetVersion">
      <documentation>
			Return version of the service.
			</documentation>
      <input name="i" message="lb:GetVersionRequest"/>
      <output name="o" message="lb:GetVersionResponse"/>
      <fault name="f" message="lb:genericFault"/>
    </operation>
    <operation name="JobStatus">
      <documentation>
			Query state of a single job.
			</documentation>
      <input name="i" message="lb:JobStatusRequest"/>
      <output name="o" message="lb:JobStatusResponse"/>
      <fault name="f" message="lb:genericFault"/>
    </operation>
    <operation name="UserJobs">
      <documentation>
			Simplified query, return all jobs of the authenticated user.
			</documentation>
      <input name="i" message="lb:UserJobsRequest"/>
      <output name="o" message="lb:UserJobsResponse"/>
      <fault name="f" message="lb:genericFault"/>
    </operation>
    <operation name="QueryJobs">
      <documentation>
			Retrieve a list of jobs, including their states, based on query conditions.
			The conditions take the form of a list of lists.
			Elements of the inner lists refer to a single job attribute, the conditions are or-ed.
			Elements of the outer list may refer to different job attributes, they are and-ed.

			</documentation>
      <input name="i" message="lb:QueryJobsRequest"/>
      <output name="o" message="lb:QueryJobsResponse"/>
      <fault name="f" message="lb:genericFault"/>
    </operation>
    <operation name="QueryEvents">
      <documentation>
			Retrieve events matching a query.
			There are two sets of conditions, on jobs and on individual events, both have to be satisfied.
			Both query conditions have the same format as in QueryJobs.

			</documentation>
      <input name="i" message="lb:QueryEventsRequest"/>
      <output name="o" message="lb:QueryEventsResponse"/>
      <fault name="f" message="lb:genericFault"/>
    </operation>
  </portType>
  <binding name="LoggingAndBookkeeping" type="lb:LoggingAndBookkeepingPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="GetVersion">
      <soap:operation style="document"/>
      <input name="i">
        <soap:body use="literal"/>
      </input>
      <output name="o">
        <soap:body use="literal"/>
      </output>
      <fault name="f">
        <soap:fault name="f" use="literal"/>
      </fault>
    </operation>
    <operation name="JobStatus">
      <soap:operation style="document"/>
      <input name="i">
        <soap:body use="literal"/>
      </input>
      <output name="o">
        <soap:body use="literal"/>
      </output>
      <fault name="f">
        <soap:fault name="f" use="literal"/>
      </fault>
    </operation>
    <operation name="UserJobs">
      <soap:operation style="document"/>
      <input name="i">
        <soap:body use="literal"/>
      </input>
      <output name="o">
        <soap:body use="literal"/>
      </output>
      <fault name="f">
        <soap:fault name="f" use="literal"/>
      </fault>
    </operation>
    <operation name="QueryJobs">
      <soap:operation style="document"/>
      <input name="i">
        <soap:body use="literal"/>
      </input>
      <output name="o">
        <soap:body use="literal"/>
      </output>
      <fault name="f">
        <soap:fault name="f" use="literal"/>
      </fault>
    </operation>
    <operation name="QueryEvents">
      <soap:operation style="document"/>
      <input name="i">
        <soap:body use="literal"/>
      </input>
      <output name="o">
        <soap:body use="literal"/>
      </output>
      <fault name="f">
        <soap:fault name="f" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="LoggingAndBookkeeping">
    <documentation>
		</documentation>
    <port name="LoggingAndBookkeeping" binding="lb:LoggingAndBookkeeping">
      <soap:address location="http://test.glite.org/lb:8080"/>
    </port>
  </service>
</definitions>
