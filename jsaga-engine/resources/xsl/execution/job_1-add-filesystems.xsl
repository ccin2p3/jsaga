<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension"
            xmlns:cfg="http://www.in2p3.fr/jsaga"
            exclude-result-prefixes="jsdl cfg">
    <!-- ###########################################################################
         # Add default file systems
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>
    
    <!-- resource -->
    <xsl:param name="resourceId"/><!-- required -->
    <xsl:param name="gridName"/><!-- required -->

    <!-- configuration -->
    <xsl:variable name="resourceScheme" select="substring-before($resourceId, ':/')"/>
    <xsl:variable name="jobService" select="document('var/jsaga-merged-config.xml')/cfg:effective-config/cfg:execution[@scheme=$resourceScheme]/cfg:jobService[@name=$gridName]"/>

    <!-- entry point -->
    <xsl:template match="/">
        <!-- check required parameters -->
        <xsl:if test="not($resourceId)"><xsl:message terminate="yes">Missing required parameter: resourceId</xsl:message></xsl:if>
        <xsl:if test="not($gridName)"><xsl:message terminate="yes">Missing required parameter: gridName</xsl:message></xsl:if>
        <!-- check required elements -->
        <xsl:if test="not($jobService)"><xsl:message terminate="yes">Missing required element: jobService for (scheme=<xsl:value-of
                select="$resourceScheme"/> and grid=<xsl:value-of select="$gridName"/>)</xsl:message></xsl:if>
        <!-- process -->
        <xsl:apply-templates select="ext:Job"/>
    </xsl:template>
    <xsl:template match="ext:Job">
        <ext:Job>
            <xsl:comment> GENERATED BY job_1-add-filesystems.xsl </xsl:comment>
            <xsl:apply-templates select="@* | * | text() | comment()"/>
        </ext:Job>
    </xsl:template>
    <xsl:template match="jsdl:JobDefinition">
        <JobDefinition>
            <xsl:apply-templates/>
        </JobDefinition>
    </xsl:template>

    <xsl:template match="jsdl:JobDescription">
        <JobDescription>
            <xsl:apply-templates select="jsdl:JobIdentification | jsdl:Application | jsdl:Resources"/>
            <xsl:if test="not(jsdl:Resources)">
                <Resources>
                    <xsl:apply-templates select="$jobService/cfg:fileSystem"/>
                </Resources>
            </xsl:if>
            <xsl:apply-templates select="jsdl:DataStaging | *[namespace-uri()!='http://schemas.ggf.org/jsdl/2005/11/jsdl']"/>            
        </JobDescription>
    </xsl:template>

    <xsl:template match="jsdl:Resources">
        <xsl:variable name="this" select="."/>
        <Resources>
            <xsl:copy-of select="jsdl:CandidateHosts"/>
            <xsl:apply-templates select="$jobService/cfg:fileSystem[not(@name=$this/jsdl:FileSystem/@name)]"/>
            <xsl:copy-of select="*[not(local-name()='CandidateHosts')]"/>
        </Resources>
    </xsl:template>

    <xsl:template match="ext:Step">
        <!-- remove pre/post-staging step -->
    </xsl:template>

    <xsl:template match="cfg:fileSystem">
        <FileSystem name="{@name}">
            <FileSystemType><xsl:value-of select="@type"/></FileSystemType>
            <MountPoint><xsl:value-of select="@mountPoint"/></MountPoint>
        </FileSystem>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="*">
        <xsl:element name="{name()}">
            <xsl:copy-of select="@*"/>
            <xsl:apply-templates/>
        </xsl:element>
    </xsl:template>
    <xsl:template match="comment()">
        <xsl:comment><xsl:value-of select="."/></xsl:comment>
    </xsl:template>
</xsl:stylesheet>