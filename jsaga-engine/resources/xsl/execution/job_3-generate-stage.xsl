<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension"
            xmlns:cfg="http://www.in2p3.fr/jsaga"
            exclude-result-prefixes="jsdl cfg">
    <!-- ###########################################################################
         # Generate staging
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>
    <xsl:strip-space elements="*"/>

    <!-- resource -->
    <xsl:param name="resourceId"/><!-- required -->
    <xsl:param name="gridName"/><!-- required -->
    <xsl:param name="Intermediary"/><!-- optional -->
    <xsl:param name="StandaloneWorker" select="false"/><!-- optional -->
    <xsl:param name="Tag"/><!-- optional -->

    <!-- collection name -->
    <xsl:param name="collectionName"/><!-- required -->
    <xsl:variable name="input_dir" select="concat($collectionName,'.in/')"/>
    <xsl:variable name="output_dir" select="concat($collectionName,'.out-@{INDEX}/')"/>

    <!-- configuration -->
    <xsl:variable name="resourceScheme" select="substring-before($resourceId, '://')"/>
    <xsl:variable name="config" select="document('var/jsaga-merged-config.xml')/cfg:effective-config/cfg:execution[@scheme=$resourceScheme]/cfg:jobService[@name=$gridName]"/>
    <xsl:variable name="localIntermediary" select="document('var/jsaga-merged-config.xml')/cfg:effective-config/@localIntermediary"/>

    <!-- entry point -->
    <xsl:template match="/">
        <xsl:apply-templates select="ext:Job"/>
    </xsl:template>
    <xsl:template match="ext:Job">
        <ext:Job>
            <xsl:comment> GENERATED BY job_3-generate-stage.xsl </xsl:comment>
            <xsl:apply-templates select="@* | * | text() | comment()"/>
        </ext:Job>
    </xsl:template>

    <!-- workaround to namespace problems... -->
    <xsl:template match="jsdl:JobDefinition">
        <JobDefinition>
            <xsl:apply-templates/>
        </JobDefinition>
    </xsl:template>

    <!-- specific templates here -->
    <xsl:template match="jsdl:Source[jsdl:URI]">
        <xsl:variable name="scheme" select="substring-before(jsdl:URI/text(), '://')"/>
        <!-- todo: choose between alternatives, create <Source> + <Step> -->
        <xsl:copy-of select="."/>
    </xsl:template>

    <xsl:template match="jsdl:Target[jsdl:URI]">
        <xsl:copy-of select="."/>
    </xsl:template>

    <xsl:template name="FILENAME">
        <xsl:variable name="uri">
            <xsl:choose>
                <xsl:when test="contains(jsdl:URI/text(),'?')"><xsl:value-of select="substring-before(jsdl:URI/text(),'?')"/></xsl:when>
                <xsl:when test="contains(jsdl:URI/text(),'#')"><xsl:value-of select="substring-before(jsdl:URI/text(),'#')"/></xsl:when>
                <xsl:otherwise><xsl:value-of select="jsdl:URI/text()"/></xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
        <xsl:value-of select="translate($uri,':/','.,')"/>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="*">
        <xsl:element name="{name()}">
            <xsl:copy-of select="@*"/>
            <xsl:apply-templates/>
        </xsl:element>
    </xsl:template>
    <xsl:template match="comment()">
        <xsl:comment><xsl:value-of select="."/></xsl:comment>
    </xsl:template>
</xsl:stylesheet>