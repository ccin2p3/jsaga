<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns:xi="http://www.w3.org/2003/XInclude"
            xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension"
            exclude-result-prefixes="jsdl">
    <!-- ###########################################################################
         # Split parametric job
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>
    <xsl:strip-space elements="*"/>
    <xsl:variable name="id">
        <xsl:choose>
            <xsl:when test="/ext:JobCollection/ext:JobCollectionDescription/ext:JobCollectionIdentification/ext:JobCollectionName/text()">
                <xsl:value-of select="/ext:JobCollection/ext:JobCollectionDescription/ext:JobCollectionIdentification/ext:JobCollectionName/text()"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="/ext:JobCollection/ext:Job/jsdl:JobDefinition/jsdl:JobDescription/jsdl:JobIdentification/jsdl:JobName/text()"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:variable>

    <!-- entry point -->
    <xsl:template match="/">
        <xsl:apply-templates select="ext:JobCollection"/>
    </xsl:template>
    <xsl:template match="ext:JobCollection">
        <ext:JobCollection>
            <xsl:comment> GENERATED BY collec_3-split-parametric.xsl </xsl:comment>
            <xsl:copy-of select="ext:JobCollectionDescription"/>
            <xsl:apply-templates select="ext:Job"/>
        </ext:JobCollection>
    </xsl:template>

    <xsl:template match="ext:Job">
        <ext:Job>
            <xsl:choose>
                <xsl:when test="contains(jsdl:JobDefinition/jsdl:JobDescription/jsdl:JobIdentification/jsdl:JobName/text(),'@{INDEX}')">
                    <xsl:apply-templates select="/ext:JobCollection/ext:JobCollectionDescription/ext:Parametric">
                        <xsl:with-param name="param" select="0"/>
                    </xsl:apply-templates>
                </xsl:when>
                <xsl:otherwise>
                    <!-- xinclude -->
                    <xsl:element namespace="http://www.w3.org/2003/XInclude" name="include">
                        <xsl:attribute name="href">jobs/<xsl:value-of
                                select="jsdl:JobDefinition/jsdl:JobDescription/jsdl:JobIdentification/jsdl:JobName/text()"/>.xml</xsl:attribute>
                    </xsl:element>
                </xsl:otherwise>
            </xsl:choose>
        </ext:Job>
    </xsl:template>

    <xsl:variable name="prefix" select="substring-before(/ext:JobCollection/ext:Job/jsdl:JobDefinition/jsdl:JobDescription/jsdl:JobIdentification/jsdl:JobName/text(),'@{INDEX}')"/>
    <xsl:variable name="suffix" select="substring-after(/ext:JobCollection/ext:Job/jsdl:JobDefinition/jsdl:JobDescription/jsdl:JobIdentification/jsdl:JobName/text(),'@{INDEX}')"/>
    <xsl:template match="ext:Parametric">
        <xsl:param name="param"/>
        <xsl:if test="number($param) &lt; number(@count)">
            <!-- xinclude -->
            <xsl:element namespace="http://www.w3.org/2003/XInclude" name="include">
                <xsl:attribute name="href">jobs/<xsl:value-of select="$prefix"/><xsl:value-of
                        select="@start+($param*@step)"/><xsl:value-of select="$suffix"/>.xml</xsl:attribute>
            </xsl:element>
            <!-- recurse -->
            <xsl:apply-templates select=".">
                <xsl:with-param name="param" select="$param + 1"/>
            </xsl:apply-templates>
        </xsl:if>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="*">
        <xsl:element name="{name()}">
            <xsl:copy-of select="@*"/>
            <xsl:apply-templates/>
        </xsl:element>
    </xsl:template>
    <xsl:template match="comment()">
        <xsl:comment><xsl:value-of select="."/></xsl:comment>
    </xsl:template>
</xsl:stylesheet>