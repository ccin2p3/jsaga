<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension"
            xmlns:stg="http://www.in2p3.fr/jsaga/staging"
            xmlns:uri="xalan://fr.in2p3.jsaga.uri"
            exclude-result-prefixes="uri">
    <!-- ###########################################################################
         # Create initial graph of file transfers
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>

    <!-- entry point -->
    <xsl:template match="/">
        <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="jsdl:JobDefinition">
        <stg:stage-graph>
            <xsl:comment> GENERATED BY 5_generate-stage-graph.xsl </xsl:comment>
            <stg:stage-in>
                <!-- for each source URI | uniq -->
                <xsl:for-each select="jsdl:JobDescription/jsdl:DataStaging/jsdl:Source/jsdl:URI[not(text()=preceding::jsdl:URI/text())]">
                    <xsl:variable name="uri" select="text()"/>
                    <stg:file uri="{$uri}" isDirectory="{uri:isDirectory($uri)}" protocol="{uri:protocol($uri)}"
                              host="{uri:host($uri)}" basedir="{uri:basedirURI($uri)}" name="{uri:filename($uri)}">
                        <xsl:variable name="context" select="uri:context($uri)"/>
                        <xsl:if test="$context">
                            <xsl:attribute name="context"><xsl:value-of select="$context"/></xsl:attribute>
                        </xsl:if>
                        <!-- for each job with this URI -->
                        <xsl:for-each select="/jsdl:JobDefinition/jsdl:JobDescription/jsdl:DataStaging[jsdl:Source/jsdl:URI/text()=$uri]">
                            <xsl:variable name="name" select="@name"/>
                            <!-- if file not pre-installed -->
                            <xsl:if test="not(../jsdl:DataStaging[@name=$name]/jsdl:Source/ext:Tag/text()=../ext:SelectedResource/ext:Tag/text())">
                                <stg:jobname>
                                    <xsl:value-of select="../jsdl:JobIdentification/jsdl:JobName/text()"/>
                                </stg:jobname>
                            </xsl:if>
                        </xsl:for-each>
                    </stg:file>
                </xsl:for-each>
            </stg:stage-in>
            <stg:stage-out>
                <!-- for each target URI | uniq -->
                <xsl:for-each select="jsdl:JobDescription/jsdl:DataStaging/jsdl:Target/jsdl:URI[not(text()=preceding::jsdl:URI/text())]">
                    <xsl:variable name="uri" select="text()"/>
                    <stg:file uri="{$uri}">
                        <!-- for each job with this URI -->
                        <xsl:for-each select="/jsdl:JobDefinition/jsdl:JobDescription/jsdl:DataStaging[jsdl:Target/jsdl:URI/text()=$uri]">
                            <stg:jobname>
                                <xsl:value-of select="../jsdl:JobIdentification/jsdl:JobName/text()"/>
                            </stg:jobname>
                        </xsl:for-each>
                    </stg:file>
                </xsl:for-each>
            </stg:stage-out>
        </stg:stage-graph>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="*|@*|text()|comment()">
        <xsl:copy-of select="."/>
    </xsl:template>
    <xsl:template match="processing-instruction()"/>
</xsl:stylesheet>