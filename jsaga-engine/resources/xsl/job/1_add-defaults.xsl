<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension"
            exclude-result-prefixes="jsdl">    
    <!-- ###########################################################################
         # Add default values to attributes and simple type elements
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>
    <xsl:param name="config" select="document('etc/example/job-defaults.jsdl')"/>

    <!-- entry point -->
    <xsl:template match="/jsdl:JobDefinition">
        <JobDefinition>
            <xsl:comment> GENERATED BY 1_add-defaults.xsl </xsl:comment>
            <xsl:for-each select="*">
                <xsl:variable name="name" select="name()"/>
                <xsl:apply-templates select=".">
                    <xsl:with-param name="def" select="$config/jsdl:JobDefinition/*[name()=$name]"/>
                </xsl:apply-templates>
            </xsl:for-each>
        </JobDefinition>
    </xsl:template>

    <!-- main rules -->
    <xsl:template match="*">
        <xsl:param name="def"/>
        <xsl:element name="{name()}">
            <!-- copy default attributes, then user attributes -->
            <xsl:copy-of select="$def/@*[local-name()!='INSERT' and local-name()!='UPDATE']"/>
            <xsl:copy-of select="@*"/>
            <!-- for each element type -->
            <xsl:variable name="current" select="."/>
            <xsl:for-each select="$def/*">
                <xsl:variable name="localname" select="local-name()"/>
                <xsl:choose>
                    <!-- if current type has an associated default element -->
                    <xsl:when test="@INSERT='true'">
                        <xsl:choose>
                            <xsl:when test="$current/*[local-name()=$localname]">
								<xsl:copy-of select="$current/*[local-name()=$localname]"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:element name="{name()}">
                                    <xsl:copy-of select="@*[local-name()!='INSERT' and local-name()!='UPDATE']"/>
                                    <xsl:copy-of select="* | text() | comment()"/>
                                </xsl:element>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:when>
                    <!-- if is leaf -->
                    <xsl:when test="not(*)">
                        <xsl:copy-of select="$current/*[local-name()=$localname]"/>
                    </xsl:when>
                    <!-- otherwise -->
                    <xsl:otherwise>
                        <xsl:apply-templates select="$current/*[local-name()=$localname]">
                            <xsl:with-param name="def" select="."/>
                        </xsl:apply-templates>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:for-each>
        </xsl:element>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="text()|comment()">
        <xsl:copy-of select="."/>
    </xsl:template>
    <xsl:template match="processing-instruction()"/>
</xsl:stylesheet>