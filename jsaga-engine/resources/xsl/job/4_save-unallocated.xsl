<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0"
            xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
            xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
            xmlns:ext="http://www.in2p3.fr/jsdl-extension">
    <!-- ###########################################################################
         # Keep jobs that have no allocated resource
         ###########################################################################
    -->
    <xsl:output method="xml" indent="yes"/>

    <!-- entry point -->
    <xsl:template match="/">
        <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="jsdl:JobDefinition">
        <jsdl:JobDefinition>
            <xsl:comment> GENERATED BY 4_save-unallocated.xsl </xsl:comment>
            <xsl:apply-templates select="@* | * | text() | comment()[position()>1]"/>
        </jsdl:JobDefinition>
    </xsl:template>

    <!-- main rules -->
    <xsl:template match="jsdl:JobDescription">
        <xsl:variable name="jobname" select="jsdl:JobIdentification/jsdl:JobName/text()"/>
        <xsl:variable name="nbslots" select="count(ext:SelectedResource)"/>
        <xsl:variable name="nbjobs" select="/jsdl:JobDefinition/ext:JobCollection/ext:Parametric/@count"/>
        <xsl:choose>
            <!-- keep partially allocated jobs (for JobCollection) -->
            <xsl:when test="ext:SelectedResource and contains($jobname,'@{PARAM}') and $nbslots&lt;$nbjobs">
                <jsdl:JobDescription>
                    <xsl:apply-templates select="@* | jsdl:* | ext:JobRetry | text() | comment()"/>
                </jsdl:JobDescription>
            </xsl:when>
            <!-- remove other allocated jobs -->
            <xsl:when test="ext:SelectedResource"/>
            <!-- keep unallocated jobs -->
            <xsl:otherwise>
                <xsl:copy-of select="."/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="ext:JobCollection">
        <ext:JobCollection>
            <xsl:apply-templates select="@* | * | text() | comment()"/>
        </ext:JobCollection>
    </xsl:template>
    <xsl:template match="ext:Parametric">
        <xsl:variable name="nbslots" select="count(/jsdl:JobDefinition/jsdl:JobDescription[contains(jsdl:JobIdentification/jsdl:JobName/text(),'@{PARAM}')]/ext:SelectedResource)"/>
        <ext:Parametric>
            <xsl:attribute name="count">
                <xsl:for-each select="/jsdl:JobDefinition/ext:JobCollection/ext:Parametric">
                    <xsl:value-of select="@count - $nbslots"/>
                </xsl:for-each>
            </xsl:attribute>
            <xsl:attribute name="start">
                <xsl:for-each select="/jsdl:JobDefinition/ext:JobCollection/ext:Parametric">
                    <xsl:value-of select="@start + ($nbslots * @step)"/>
                </xsl:for-each>
            </xsl:attribute>
            <xsl:apply-templates select="@* | * | text() | comment()"/>
        </ext:Parametric>
    </xsl:template>

    <!-- default template rules -->
    <xsl:template match="*|@*|text()|comment()">
        <xsl:copy-of select="."/>
    </xsl:template>
    <xsl:template match="processing-instruction()"/>
</xsl:stylesheet>