<effective-config xmlns="http://www.in2p3.fr/jsaga">
    <!-- languages -->
    <language name="jsdl" impl="fr.in2p3.jsaga.adaptor.language.JSDLLanguageAdaptor"/>
    <language name="rsl2" impl="fr.in2p3.jsaga.adaptor.language.RSL2LanguageAdaptor"/>
    <language name="rsl4" impl="fr.in2p3.jsaga.adaptor.language.RSL4LanguageAdaptor"/>
    <language name="jdl" impl="fr.in2p3.jsaga.adaptor.language.JDLLanguageAdaptor"/>
    <language name="pbs" impl="fr.in2p3.jsaga.adaptor.language.PBSLanguageAdaptor"/>
    <language name="legacy" impl="fr.in2p3.jsaga.adaptor.language.LegacyLanguageAdaptor"/>
    <language name="saga" impl="fr.in2p3.jsaga.adaptor.language.SAGALanguageAdaptor"/>

    <!-- context instances -->
    <contextInstance type="Globus" indice="0" impl="fr.in2p3.jsaga.adaptor.security.GlobusSecurityAdaptorBuilder"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* [LifeTime] [Limited] [ProxyType])) &lt;CertRepository>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
        <attribute name="LifeTime" value="PT12H"/>
        <attribute name="Limited" value="False"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* [LifeTime] [Limited] [ProxyType]) &lt;CertRepository>)"/>
    </contextInstance>
    <contextInstance type="MyProxy" indice="0" impl="fr.in2p3.jsaga.adaptor.security.MyProxySecurityAdaptorBuilder"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserID MyProxyPass) | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server [LifeTime] [UserID] [MyProxyPass])) &lt;CertRepository>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server [LifeTime] [UserID] [MyProxyPass]) &lt;CertRepository>)"/>
    </contextInstance>
    <contextInstance type="VOMS" indice="0" impl="fr.in2p3.jsaga.adaptor.security.VOMSSecurityAdaptorBuilder"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server UserVO [LifeTime] [UserFQAN])) &lt;CertRepository>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server UserVO [LifeTime] [UserFQAN]) &lt;CertRepository>)"/>
    </contextInstance>
    <contextInstance type="SSH" indice="0" impl="fr.in2p3.jsaga.adaptor.security.SSHSecurityAdaptorBuilder"
             usage="((&lt;UserCert> &lt;UserKey>) | (UserID *UserPass*))">
        <attribute name="UserCert" value="E:\User Settings/.ssh/id_dsa.pub"/>
        <attribute name="UserKey" value="E:\User Settings/.ssh/id_dsa"/>
    </contextInstance>
    <contextInstance type="X509" indice="0" impl="fr.in2p3.jsaga.adaptor.security.X509SecurityAdaptorBuilder"
             usage="(&lt;UserCert> *UserPass* Alias)">
        <attribute name="UserCert" value="E:\User Settings/.keystore"/>
        <attribute name="UserPass" value="changeme"/>
    </contextInstance>
    <contextInstance type="UserPass" indice="0" impl="fr.in2p3.jsaga.adaptor.security.UserPassSecurityAdaptorBuilder"
             usage="(UserID *UserPass*)">
        <attribute name="UserID" value="anonymous"/>
        <attribute name="UserPass" value="anon"/>
    </contextInstance>

    <!-- protocols -->
    <protocol scheme="file" impl="fr.in2p3.jsaga.adaptor.data.FileDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <schemeAlias>local</schemeAlias>
    </protocol>
    <protocol scheme="http" impl="fr.in2p3.jsaga.adaptor.data.HTTPDataAdaptor" read="true" write="false" thirdparty="false" logical="false"/>
    <protocol scheme="https" impl="fr.in2p3.jsaga.adaptor.data.HTTPSDataAdaptor" read="true" write="false" thirdparty="false" logical="false">
        <supportedContextType>X509</supportedContextType>
    </protocol>
    <protocol scheme="ftp" impl="fr.in2p3.jsaga.adaptor.data.FTPDataAdaptor" read="true" write="true" thirdparty="false" logical="false">
        <supportedContextType>UserPass</supportedContextType>
    </protocol>
    <protocol scheme="sftp" impl="fr.in2p3.jsaga.adaptor.data.SFTPDataAdaptor" read="true" write="true" thirdparty="false" logical="false">
        <supportedContextType>SSH</supportedContextType>
    </protocol>
    <protocol scheme="mail" impl="fr.in2p3.jsaga.adaptor.data.SMTPDataAdaptor" read="false" write="true" thirdparty="false" logical="false">
        <schemeAlias>mailto</schemeAlias>
        <schemeAlias>smtp</schemeAlias>
    </protocol>
    <protocol scheme="gzip" impl="fr.in2p3.jsaga.adaptor.data.GZipDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="tar" impl="fr.in2p3.jsaga.adaptor.data.TarDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="enc" impl="fr.in2p3.jsaga.adaptor.data.EncryptDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="catalog" impl="fr.in2p3.jsaga.adaptor.data.PersonalCatalogDataAdaptor" read="true" write="true" thirdparty="false" logical="true"/>
    <protocol scheme="test" impl="fr.in2p3.jsaga.adaptor.data.TestDataAdaptor" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>emulated</schemeAlias>
    </protocol>
    <protocol scheme="gsiftp" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>gridftp</schemeAlias>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="gsiftp-old" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor_old" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>gridftp-old</schemeAlias>
        <schemeAlias>gridftp-v1</schemeAlias>
        <schemeAlias>gsiftp-v1</schemeAlias>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="srm" impl="fr.in2p3.jsaga.adaptor.data.SRMDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <attribute name="protocols" value="dcap,rfio,gsiftp"/>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="lfn" impl="fr.in2p3.jsaga.adaptor.data.LFCDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="srb" impl="fr.in2p3.jsaga.adaptor.data.SRBDataAdaptor" read="true" write="true" thirdparty="false" logical="true">
        <supportedContextType>UserPass</supportedContextType>
    </protocol>

    <!-- jobmgt -->
    <jobservice type="gatekeeper" impl="fr.in2p3.jsaga.adaptor.job.GatekeeperJobControlAdaptor" bulk="false">
        <monitor impl="fr.in2p3.jsaga.adaptor.job.GatekeeperJobMonitorAdaptor"/>
        <supportedContextType>Globus</supportedContextType>
    </jobservice>
    <jobservice type="wms" impl="fr.in2p3.jsaga.adaptor.job.WMSJobControlAdaptor" bulk="true">
        <monitor impl="fr.in2p3.jsaga.adaptor.job.LBJobMonitorAdaptor"/>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
        <supportedProtocolScheme>lfn</supportedProtocolScheme>
        <supportedProtocolScheme>srm</supportedProtocolScheme>
        <supportedProtocolScheme>gsiftp</supportedProtocolScheme>
        <supportedProtocolScheme>file</supportedProtocolScheme>
    </jobservice>
    <jobservice type="ssh" impl="fr.in2p3.jsaga.adaptor.job.SSHJobControlAdaptor" bulk="false">
        <monitor impl="fr.in2p3.jsaga.adaptor.job.SSHJobMonitorAdaptor"/>
        <supportedContextType>SSH</supportedContextType>
    </jobservice>
</effective-config>