<effective-config xmlns="http://www.in2p3.fr/jsaga">
    <!-- languages -->
    <language name="jsdl"
              parse="fr.in2p3.jsaga.adaptor.language.XMLLanguageAdaptor"
              validate="schema/jsdl-extended.xsd.xml"/>
    <language name="rsl2"
              parse="fr.in2p3.jsaga.adaptor.language.RSLLanguageAdaptor"
              transform="../../etc/in2p3_jsaga_globus/RSL2_to_JSDL.xsl"/>
    <language name="rsl4"
              parse="fr.in2p3.jsaga.adaptor.language.XMLLanguageAdaptor"
              validate="share/schema/wsrf/in2p3_jsaga_globus/rsl_v4.xsd"
              transform="../../etc/in2p3_jsaga_globus/RSL4_to_JSDL.xsl"/>
    <language name="jdl"
              parse="fr.in2p3.jsaga.adaptor.language.ClassadLanguageAdaptor"
              validate="share/schema/wsrf/in2p3_jsaga_glite/JDL_classad_definition.txt"
              transform="../../etc/in2p3_jsaga_glite/JDL_to_JSDL.xsl"/>
    <language name="pbs"
              parse="fr.in2p3.jsaga.adaptor.language.HeaderLanguageAdaptor"
              transform="../../etc/in2p3_jsaga_pbs/PBS_to_JSDL.xsl"/>
    <language name="legacy"
              parse="fr.in2p3.jsaga.adaptor.language.XMLLanguageAdaptor"
              validate="share/schema/wsrf/in2p3_jsaga_legacy/legacy.xsd"
              transform="../../etc/in2p3_jsaga_legacy/legacy_to_JSDL.xsl"/>
    <language name="saga"
              parse="fr.in2p3.jsaga.adaptor.language.PropertiesLanguageAdaptor"
              transform="../../etc/in2p3_jsaga_saga/SAGA_to_JSDL.xsl"/>

    <!-- context instances -->
    <contextInstance type="Globus" indice="0" impl="fr.in2p3.jsaga.adaptor.security.GlobusContextAdaptor"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* [LifeTime] [Limited] [ProxyType])) &lt;CertDir>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertDir" value="/etc/grid-security/certificates/"/>
        <attribute name="LifeTime" value="PT12H"/>
        <attribute name="Limited" value="False"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* [LifeTime] [Limited] [ProxyType]) &lt;CertDir>)"/>
    </contextInstance>
    <contextInstance type="MyProxy" indice="0" impl="fr.in2p3.jsaga.adaptor.security.MyProxyContextAdaptor"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserName MyProxyPass) | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server [LifeTime] [UserName] [MyProxyPass])) &lt;CertDir>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertDir" value="/etc/grid-security/certificates/"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server [LifeTime] [UserName] [MyProxyPass]) &lt;CertDir>)"/>
    </contextInstance>
    <contextInstance type="VOMS" indice="0" impl="fr.in2p3.jsaga.adaptor.security.VOMSContextAdaptor"
             usage="((_UserProxyObject_ | +UserProxy+ | (UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server UserVO [LifeTime] [UserFQAN])) &lt;CertDir>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertDir" value="/etc/grid-security/certificates/"/>
        <init usage="((UserProxy &lt;UserCert> &lt;UserKey> *UserPass* Server UserVO [LifeTime] [UserFQAN]) &lt;CertDir>)"/>
    </contextInstance>
    <contextInstance type="SSH" indice="0" impl="fr.in2p3.jsaga.adaptor.security.SSHContextAdaptor"
             usage="((&lt;UserCert> &lt;UserKey>) | (UserName *UserPass*))">
        <attribute name="UserCert" value="E:\User Settings/.ssh/id_dsa.pub"/>
        <attribute name="UserKey" value="E:\User Settings/.ssh/id_dsa"/>
    </contextInstance>
    <contextInstance type="X509" indice="0" impl="fr.in2p3.jsaga.adaptor.security.X509ContextAdaptor"
             usage="(&lt;UserCert> *UserPass* Alias)">
        <attribute name="UserCert" value="E:\User Settings/.keystore"/>
        <attribute name="UserPass" value="changeme"/>
    </contextInstance>
    <contextInstance type="UserPass" indice="0" impl="fr.in2p3.jsaga.adaptor.security.UserPassSecurityAdaptorBuilder"
             usage="(UserName *UserPass*)">
        <attribute name="UserName" value="anonymous"/>
        <attribute name="UserPass" value="anon"/>
    </contextInstance>

    <!-- protocols -->
    <protocol scheme="file" impl="fr.in2p3.jsaga.adaptor.data.FileDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <schemeAlias>local</schemeAlias>
    </protocol>
    <protocol scheme="http" impl="fr.in2p3.jsaga.adaptor.data.HTTPDataAdaptor" read="true" write="false" thirdparty="false" logical="false"/>
    <protocol scheme="https" impl="fr.in2p3.jsaga.adaptor.data.HTTPSDataAdaptor" read="true" write="false" thirdparty="false" logical="false">
        <supportedContextType>X509</supportedContextType>
    </protocol>
    <protocol scheme="ftp" impl="fr.in2p3.jsaga.adaptor.data.FTPDataAdaptor" read="true" write="true" thirdparty="false" logical="false">
        <supportedContextType>UserPass</supportedContextType>
    </protocol>
    <protocol scheme="sftp" impl="fr.in2p3.jsaga.adaptor.data.SFTPDataAdaptor" read="true" write="true" thirdparty="false" logical="false">
        <supportedContextType>SSH</supportedContextType>
    </protocol>
    <protocol scheme="mail" impl="fr.in2p3.jsaga.adaptor.data.SMTPDataAdaptor" read="false" write="true" thirdparty="false" logical="false">
        <schemeAlias>mailto</schemeAlias>
        <schemeAlias>smtp</schemeAlias>
    </protocol>
    <protocol scheme="gzip" impl="fr.in2p3.jsaga.adaptor.data.GZipDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="tar" impl="fr.in2p3.jsaga.adaptor.data.TarDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="enc" impl="fr.in2p3.jsaga.adaptor.data.EncryptDataAdaptor" read="true" write="true" thirdparty="false" logical="false"/>
    <protocol scheme="catalog" impl="fr.in2p3.jsaga.adaptor.data.PersonalCatalogDataAdaptor" read="true" write="true" thirdparty="false" logical="true"/>
    <protocol scheme="test" impl="fr.in2p3.jsaga.adaptor.data.TestDataAdaptor" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>emulated</schemeAlias>
    </protocol>
    <protocol scheme="gsiftp" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>gridftp</schemeAlias>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="gsiftp-old" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor_old" read="true" write="true" thirdparty="true" logical="false">
        <schemeAlias>gridftp-old</schemeAlias>
        <schemeAlias>gridftp-v1</schemeAlias>
        <schemeAlias>gsiftp-v1</schemeAlias>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="srm" impl="fr.in2p3.jsaga.adaptor.data.SRMDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <attribute name="protocols" value="dcap,rfio,gsiftp"/>
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="lfn" impl="fr.in2p3.jsaga.adaptor.data.LFCDataAdaptor" read="true" write="true" thirdparty="true" logical="true">
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
    </protocol>
    <protocol scheme="srb" impl="fr.in2p3.jsaga.adaptor.data.SRBDataAdaptor" read="true" write="true" thirdparty="false" logical="true">
        <supportedContextType>UserPass</supportedContextType>
    </protocol>

    <!-- jobmgt -->
    <jobservice type="Gatekeeper" impl="fr.in2p3.jsaga.adaptor.job.GatekeeperJobAdaptor" bulk="false">
        <supportedContextType>Globus</supportedContextType>
    </jobservice>
    <jobservice type="WMS" impl="fr.in2p3.jsaga.adaptor.job.WMSJobAdaptor" bulk="true">
        <supportedContextType>Globus</supportedContextType>
        <supportedContextType>MyProxy</supportedContextType>
        <supportedContextType>VOMS</supportedContextType>
        <supportedProtocolScheme>lfn</supportedProtocolScheme>
        <supportedProtocolScheme>srm</supportedProtocolScheme>
        <supportedProtocolScheme>gsiftp</supportedProtocolScheme>
        <supportedProtocolScheme>file</supportedProtocolScheme>
    </jobservice>
    <jobservice type="SSH" impl="fr.in2p3.jsaga.adaptor.job.SSHJobAdaptor" bulk="false">
        <supportedContextType>SSH</supportedContextType>
    </jobservice>
</effective-config>