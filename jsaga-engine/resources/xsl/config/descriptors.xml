<effective-config xmlns="http://www.in2p3.fr/jsaga">
    <!-- languages -->
    <language name="jsdl" impl="fr.in2p3.jsaga.adaptor.language.JSDLLanguageAdaptor"/>
    <language name="rsl2" impl="fr.in2p3.jsaga.adaptor.language.RSL2LanguageAdaptor"/>
    <language name="rsl4" impl="fr.in2p3.jsaga.adaptor.language.RSL4LanguageAdaptor"/>
    <language name="jdl" impl="fr.in2p3.jsaga.adaptor.language.JDLLanguageAdaptor"/>
    <language name="pbs" impl="fr.in2p3.jsaga.adaptor.language.PBSLanguageAdaptor"/>
    <language name="legacy" impl="fr.in2p3.jsaga.adaptor.language.LegacyLanguageAdaptor"/>
    <language name="saga" impl="fr.in2p3.jsaga.adaptor.language.SAGALanguageAdaptor"/>

    <!-- context instances -->
    <context name="Globus" type="Globus" impl="fr.in2p3.jsaga.adaptor.security.GlobusSecurityAdaptorBuilder"
             usage="((((&lt;UserCertKey> | (&lt;UserCert> &lt;UserKey>)) UserProxy *UserPass* LifeTime [Delegation]) | _UserProxyObject_ | &lt;UserProxy>) &lt;CertRepository>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
        <attribute name="LifeTime" value="PT12H"/>
        <attribute name="Limited" value="False"/>
    </context>
    <context name="MyProxy" type="MyProxy" impl="fr.in2p3.jsaga.adaptor.security.MyProxySecurityAdaptorBuilder"
             usage="(((&lt;UserCert> &lt;UserKey> UserProxy *UserPass* Server UserID *MyProxyPass* LifeTime) | _UserProxyObject:10800_ | &lt;UserProxy:10800> | (_UserProxyObject_ UserID *MyProxyPass*) | (UserProxy UserID *MyProxyPass*)) &lt;CertRepository>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
    </context>
    <context name="VOMS" type="VOMS" impl="fr.in2p3.jsaga.adaptor.security.VOMSSecurityAdaptorBuilder"
             usage="((((&lt;UserCertKey> | (&lt;UserCert> &lt;UserKey>)) UserProxy *UserPass* Server UserVO [UserFQAN] LifeTime [Delegation] [ProxyType]) | _UserProxyObject_ | &lt;UserProxy>) &lt;CertRepository> &lt;VomsDir>)">
        <attribute name="UserProxy" value="C:\DOCUME~1\SYLVAI~1\LOCALS~1\Temp\x509up_u[uid]"/>
        <attribute name="UserCert" value="E:\User Settings/.globus/usercert.pem"/>
        <attribute name="UserKey" value="E:\User Settings/.globus/userkey.pem"/>
        <attribute name="CertRepository" value="/etc/grid-security/certificates/"/>
    </context>
    <context name="SSH" type="SSH" impl="fr.in2p3.jsaga.adaptor.security.SSHSecurityAdaptorBuilder"
             usage="((UserID *UserPass*) | (&lt;UserCert> &lt;UserKey>))">
        <attribute name="UserCert" value="E:\User Settings/.ssh/id_dsa.pub"/>
        <attribute name="UserKey" value="E:\User Settings/.ssh/id_dsa"/>
    </context>
    <context name="X509" type="X509" impl="fr.in2p3.jsaga.adaptor.security.X509SecurityAdaptorBuilder"
             usage="(&lt;UserCert> *UserPass* Alias)">
        <attribute name="UserCert" value="E:\User Settings/.keystore"/>
        <attribute name="UserPass" value="changeme"/>
    </context>
    <context name="UserPass" type="UserPass" impl="fr.in2p3.jsaga.adaptor.security.UserPassSecurityAdaptorBuilder"
             usage="(UserID ((*UserPass* LifeTime) | *UserPass* | UserPassCrypted))">
        <attribute name="UserID" value="anonymous"/>
        <attribute name="UserPass" value="anon"/>
    </context>

    <!-- protocols -->
    <protocol scheme="file" read="true" write="true" thirdparty="true" logical="true">
        <dataService name="default" type="file" impl="fr.in2p3.jsaga.adaptor.data.FileDataAdaptor"/>
    </protocol>
    <protocol scheme="http" read="true" write="false" thirdparty="false" logical="false">
        <dataService name="default" type="http" impl="fr.in2p3.jsaga.adaptor.data.HTTPDataAdaptor"/>
    </protocol>
    <protocol scheme="https" read="true" write="false" thirdparty="false" logical="false">
        <dataService name="default" type="https" impl="fr.in2p3.jsaga.adaptor.data.HTTPSDataAdaptor">
            <supportedContextType>X509</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="ftp" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="ftp" impl="fr.in2p3.jsaga.adaptor.data.FTPDataAdaptor">
            <supportedContextType>UserPass</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="sftp" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="sftp" impl="fr.in2p3.jsaga.adaptor.data.SFTPDataAdaptor">
            <supportedContextType>SSH</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="smtp" read="false" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="smtp" impl="fr.in2p3.jsaga.adaptor.data.SMTPDataAdaptor"/>
    </protocol>
    <protocol scheme="gzip" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="gzip" impl="fr.in2p3.jsaga.adaptor.data.GZipDataAdaptor"/>
    </protocol>
    <protocol scheme="tar" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="tar" impl="fr.in2p3.jsaga.adaptor.data.TarDataAdaptor"/>
    </protocol>
    <protocol scheme="tgz" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="tgz" impl="fr.in2p3.jsaga.adaptor.data.TarGZipDataAdaptor"/>
    </protocol>
    <protocol scheme="enc" read="true" write="true" thirdparty="false" logical="false">
        <dataService name="default" type="enc" impl="fr.in2p3.jsaga.adaptor.data.EncryptDataAdaptor"/>
    </protocol>
    <protocol scheme="catalog" read="true" write="true" thirdparty="false" logical="true">
        <dataService name="default" type="catalog" impl="fr.in2p3.jsaga.adaptor.data.PersonalCatalogDataAdaptor"/>
    </protocol>
    <protocol scheme="test" read="true" write="true" thirdparty="true" logical="false">
        <dataService name="default" type="test" impl="fr.in2p3.jsaga.adaptor.data.TestDataAdaptor"/>
    </protocol>
    <protocol scheme="gsiftp" read="true" write="true" thirdparty="true" logical="false">
        <dataService name="default" type="gsiftp" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor">
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="gsiftp-v2" read="true" write="true" thirdparty="true" logical="false">
        <dataService name="default" type="gsiftp-new" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor_new">
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="gsiftp-v1" read="true" write="true" thirdparty="true" logical="false">
        <dataService name="default" type="gsiftp-old" impl="fr.in2p3.jsaga.adaptor.data.GSIFTPDataAdaptor_old">
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="srm" read="true" write="true" thirdparty="true" logical="true">
        <dataService name="default" type="srm" impl="fr.in2p3.jsaga.adaptor.data.SRMDataAdaptor">
            <attribute name="TransferProtocols" value="dcap,rfio,gsiftp"/>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="lfn" read="true" write="true" thirdparty="true" logical="true">
        <dataService name="default" type="lfn" impl="fr.in2p3.jsaga.adaptor.data.LFCDataAdaptor">
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="srb" read="true" write="true" thirdparty="false" logical="true">
        <dataService name="default" type="srb" impl="fr.in2p3.jsaga.adaptor.data.SRBDataAdaptor">
            <supportedContextType>UserPass</supportedContextType>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>
    <protocol scheme="irods" read="true" write="true" thirdparty="false" logical="true">
        <dataService name="default" type="irods" impl="fr.in2p3.jsaga.adaptor.data.IrodsDataAdaptor">
            <supportedContextType>UserPass</supportedContextType>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
        </dataService>
    </protocol>

    <!-- execution -->
    <execution scheme="gatekeeper" bulk="false">
        <jobService name="default" type="gatekeeper" impl="fr.in2p3.jsaga.adaptor.job.GatekeeperJobControlAdaptor">
            <monitorService impl="fr.in2p3.jsaga.adaptor.job.GatekeeperJobMonitorAdaptor"/>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
            <fileStaging/>
        </jobService>
    </execution>
    <execution scheme="jjs" bulk="false">
        <jobService name="default" type="jjs" impl="fr.in2p3.jsaga.adaptor.job.JJSJobControlAdaptor">
            <monitorService impl="fr.in2p3.jsaga.adaptor.job.JJSJobMonitorAdaptor"/>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
            <fileStaging/>
        </jobService>
    </execution>
    <execution scheme="wms" bulk="true">
        <jobService name="default" type="wms" impl="fr.in2p3.jsaga.adaptor.job.WMSJobControlAdaptor">
            <monitorService impl="fr.in2p3.jsaga.adaptor.job.LBJobMonitorAdaptor"/>
            <supportedContextType>Globus</supportedContextType>
            <supportedContextType>MyProxy</supportedContextType>
            <supportedContextType>VOMS</supportedContextType>
            <fileStaging>
                <supportedProtocolScheme>lfn</supportedProtocolScheme>
                <supportedProtocolScheme>srm</supportedProtocolScheme>
                <supportedProtocolScheme>gsiftp</supportedProtocolScheme>
                <supportedProtocolScheme>file</supportedProtocolScheme>
            </fileStaging>
        </jobService>
    </execution>
    <execution scheme="ssh" bulk="false">
        <jobService name="default" type="ssh" impl="fr.in2p3.jsaga.adaptor.job.SSHJobControlAdaptor">
            <monitorService impl="fr.in2p3.jsaga.adaptor.job.SSHJobMonitorAdaptor"/>
            <supportedContextType>SSH</supportedContextType>
            <fileStaging/>
        </jobService>
    </execution>
</effective-config>