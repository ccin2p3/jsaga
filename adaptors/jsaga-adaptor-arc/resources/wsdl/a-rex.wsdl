<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://www.nordugrid.org/schemas/a-rex"
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns:wsa="http://www.w3.org/2005/08/addressing"
 xmlns:bes-factory="http://schemas.ggf.org/bes/2006/08/bes-factory"
 xmlns:bes-mgmt="http://schemas.ggf.org/bes/2006/08/bes-management"
 xmlns:deleg="http://www.nordugrid.org/schemas/delegation"
 xmlns:wsrf-rpw="http://docs.oasis-open.org/wsrf/rpw-2"
 xmlns:wsrf-rw="http://docs.oasis-open.org/wsrf/rw-2"
 xmlns:a-rex="http://www.nordugrid.org/schemas/a-rex">


  <wsdl:import namespace="http://schemas.ggf.org/bes/2006/08/bes-factory" location="../../../jsaga-adaptor-bes/resources/wsdl/bes-factory.wsdl"/>
  <!-- <wsdl:import namespace="http://schemas.ggf.org/bes/2006/08/bes-management" location="./bes-management.wsdl"/>-->
  <wsdl:import namespace="http://www.nordugrid.org/schemas/delegation" location="./delegation.wsdl"/>
  <wsdl:import namespace="http://docs.oasis-open.org/wsrf/rpw-2" location="http://docs.oasis-open.org/wsrf/rpw-2.wsdl"/>
  <wsdl:import namespace="http://docs.oasis-open.org/wsrf/rw-2" location="http://docs.oasis-open.org/wsrf/rw-2.wsdl"/>

  <wsdl:types>
    <xsd:schema         xmlns:wsa="http://www.w3.org/2005/08/addressing"
        attributeFormDefault="unqualified"
        elementFormDefault="qualified"
    targetNamespace="http://www.nordugrid.org/schemas/a-rex">
      <xsd:simpleType name="ActivitySubStateType">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Accepting"/>
          <xsd:enumeration value="Accepted"/>
          <xsd:enumeration value="Preparing"/>
          <xsd:enumeration value="Prepared"/>
          <xsd:enumeration value="Submitting"/>
          <xsd:enumeration value="Executing"/>
          <xsd:enumeration value="Killing"/>
          <xsd:enumeration value="Executed"/>
          <xsd:enumeration value="Finishing"/>
          <xsd:enumeration value="Finished"/>
          <xsd:enumeration value="Failed"/>
          <xsd:enumeration value="Deleted"/>
          <xsd:enumeration value="Pending"/>
          <xsd:enumeration value="Held"/>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="State" type="a-rex:ActivitySubStateType"/>
      <xsd:element name="LRMSState" type="xsd:string"/>
		
      <xsd:complexType name="Glue2ResourceType">
        <xsd:sequence>
          <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="Glue2JobType">
        <xsd:sequence>
          <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ActivityType">
        <xsd:sequence>
          <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType"/>
          <xsd:element ref="bes-factory:ActivityDocument" minOccurs='0'/>
          <xsd:element name="Glue2Job" type="a-rex:Glue2JobType" minOccurs='0'/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ActivitiesType">
        <xsd:sequence>
          <xsd:element name="Activity" type="a-rex:ActivityType" minOccurs='0' maxOccurs='unbounded'/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ResourceInformationDocumentType">
        <xsd:sequence>
          <xsd:element name="BESFactory" type="bes-factory:FactoryResourceAttributesDocumentType"/>
          <xsd:element name="Glue2Resource" type="a-rex:Glue2ResourceType" minOccurs='0'/>
          <xsd:element name="Activities" type="a-rex:ActivitiesType" minOccurs='0'/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="ChangeActivityStatusRequestType">
        <xsd:sequence>
	  <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType"/>
          <xsd:element name="OldStatus" type="bes-factory:ActivityStatusType" minOccurs="0"/>
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ChangeActivityStatus" type="a-rex:ChangeActivityStatusRequestType"/>
		
      <xsd:complexType name="ChangeActivityStatusResponseType">
        <xsd:sequence>
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ChangeActivityStatusResponse" type="a-rex:ChangeActivityStatusResponseType"/>
		
		
      <xsd:complexType name="TheseFilesNeedToCheckType">
        <xsd:sequence>
	          <xsd:element name="FileURL" type="xsd:anyURI" minOccurs="1" maxOccurs="unbounded"/>    
        </xsd:sequence>
      </xsd:complexType>
		
      <xsd:complexType name="CacheCheckRequestType">
        <xsd:sequence>
          <xsd:element name="TheseFilesNeedToCheck" type="a-rex:TheseFilesNeedToCheckType" minOccurs='1' maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="CacheCheckRequest" type="a-rex:CacheCheckRequestType"/>


      <xsd:complexType name="ResultType">
        <xsd:sequence>
	          <xsd:element name="FileURL" type="xsd:anyURI" minOccurs="1" maxOccurs="1"/>    
	          <xsd:element name="ExistInTheCache" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>    
	          <xsd:element name="FileSize" type="xsd:long" minOccurs="1" maxOccurs="1"/>    
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="CacheCheckResultType">
        <xsd:sequence>
	          <xsd:element name="Result" type="a-rex:ResultType" minOccurs="1" maxOccurs="unbounded"/>    
        </xsd:sequence>
      </xsd:complexType>

      <xsd:complexType name="CacheCheckResponseType">
        <xsd:sequence>
          <xsd:element name="CacheCheckResult" type="a-rex:CacheCheckResultType" minOccurs='1' maxOccurs="1"/>
        </xsd:sequence>
      </xsd:complexType>

      <xsd:element name="CacheCheckResponse" type="a-rex:CacheCheckResponseType"/>

      <xsd:complexType name="MigrateActivityType">
        <xsd:sequence>
	  <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType" minOccurs="1" maxOccurs="1"/>
          <xsd:element ref="bes-factory:ActivityDocument" minOccurs="0"/>
	  <xsd:element name="ForceMigration" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>    
          <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>        
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
      </xsd:complexType>

      <xsd:complexType name="MigrateActivityResponseType">
        <xsd:sequence>
          <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType"/>
          <xsd:element ref="bes-factory:ActivityDocument" minOccurs="0"/>
          <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>        
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
      </xsd:complexType>

      <xsd:element name="MigrateActivity" type="a-rex:MigrateActivityType"/>
      <xsd:element name="MigrateActivityResponse" type="a-rex:MigrateActivityResponseType"/>
 
      <xsd:complexType name="CacheConfigurationFaultType">
        <xsd:sequence>
           <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
      </xsd:complexType>
        
 
      <xsd:complexType name="CacheDisabledFaultType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
         </xsd:sequence>
      </xsd:complexType>
      
      <xsd:element name="CacheDisabledFault" type="a-rex:CacheDisabledFaultType"/>     
      <xsd:element name="CacheConfigurationFault" type="a-rex:CacheConfigurationFaultType"/>  

    </xsd:schema>
  </wsdl:types>

  <wsdl:message name="ChangeActivityStatusRequest">
    <wsdl:part name="ChangeActivityStatusRequest" element="a-rex:ChangeActivityStatus"/>
  </wsdl:message>

  <wsdl:message name="ChangeActivityStatusResponse">
    <wsdl:part name="ChangeActivityStatusResponse" element="a-rex:ChangeActivityStatusResponse"/>
  </wsdl:message>

  <wsdl:message name="CacheCheckRequest">
    <wsdl:part name="CacheCheckRequest" element="a-rex:CacheCheckRequest"/>
  </wsdl:message>

  <wsdl:message name="CacheCheckResponse">
    <wsdl:part name="CacheCheckResponse" element="a-rex:CacheCheckResponse"/>
  </wsdl:message>

  <wsdl:message name="CacheConfigurationFault">
    <wsdl:part name="CacheConfigurationFault" element="a-rex:CacheConfigurationFault"/>
  </wsdl:message>
  
    <wsdl:message name="CacheDisabledFault">
    <wsdl:part name="CacheDisabledFault" element="a-rex:CacheDisabledFault"/>
  </wsdl:message>

  <wsdl:message name="MigrateActivityRequest">
    <wsdl:part name="MigrateActivityRequest" 
	element="a-rex:MigrateActivity"/>
  </wsdl:message>

  <wsdl:message name="MigrateActivityResponse">
    <wsdl:part name="MigrateActivityResponse" 
        element="a-rex:MigrateActivityResponse"/>
  </wsdl:message>

  <wsdl:portType name="a-rex">
    <wsdl:operation name="ChangeActivityStatus">
      <wsdl:documentation>
        This operation allows any simple status change request 
	which involves no additional parameters. It should be
	used to modify job/activity execution flow:
	  - To put job on hold
	  - To rerun job in case of failure
	  - To cancel job (same as TerminateActivity of BESFActory)
	  - To remove/release job - as long as non-existence is a state
	  - Any other status change no supported by BES
      </wsdl:documentation>
      <wsdl:input name="ChangeActivityStatusRequest"
        message="a-rex:ChangeActivityStatusRequest"/>
      <wsdl:output name="ChangeActivityStatusResponse"
        message="a-rex:ChangeActivityStatusResponse"/>
      <wsdl:fault name="NotAuthorizedFault"
        message="bes-factory:NotAuthorizedFault"
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="InvalidActivityIdentifierFault" 
        message="bes-factory:InvalidActivityIdentifierFault"
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="CantApplyOperationToCurrentStateFault" 
         message="bes-factory:CantApplyOperationToCurrentStateFault"
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault" 
         message="bes-factory:OperationWillBeAppliedEventuallyFault"
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
    </wsdl:operation>

    <!-- WSRF operations supported by this portType -->
    <wsdl:operation name="GetResourcePropertyDocument">
      <wsdl:input name="GetResourcePropertyDocumentRequest"
        message="wsrf-rpw:GetResourcePropertyDocumentRequest"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetResourcePropertyDocument/GetResourcePropertyDocumentRequest"/>
      <wsdl:output name="GetResourcePropertyDocumentResponse"
        message="wsrf-rpw:GetResourcePropertyDocumentResponse"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetResourcePropertyDocument/GetResourcePropertyDocumentResponse"/>
      <wsdl:fault name="ResourceUnknownFault"
        message="wsrf-rw:ResourceUnknownFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="ResourceUnavailableFault" 
        message="wsrf-rw:ResourceUnavailableFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
    </wsdl:operation>
    <wsdl:operation name="GetResourceProperty">
      <wsdl:input name="GetResourcePropertyRequest"
        message="wsrf-rpw:GetResourcePropertyRequest"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetResourceProperty/GetResourcePropertyRequest"/>
      <wsdl:output name="GetResourcePropertyResponse"
        message="wsrf-rpw:GetResourcePropertyResponse"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetResourceProperty/GetResourcePropertyResponse"/>
      <wsdl:fault name="ResourceUnknownFault"
        message="wsrf-rw:ResourceUnknownFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="ResourceUnavailableFault" 
        message="wsrf-rw:ResourceUnavailableFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="InvalidResourcePropertyQNameFault" 
        message="wsrf-rpw:InvalidResourcePropertyQNameFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleResourceProperties">
      <wsdl:input name="GetMultipleResourcePropertiesRequest"
        message="wsrf-rpw:GetMultipleResourcePropertiesRequest"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetMultipleResourceProperties/GetMultipleResourcePropertiesRequest"/>
      <wsdl:output name="GetMultipleResourcePropertiesResponse"
        message="wsrf-rpw:GetMultipleResourcePropertiesResponse"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/GetMultipleResourceProperties/GetMultipleResourcePropertiesResponse"/>
      <wsdl:fault name="ResourceUnknownFault"
        message="wsrf-rw:ResourceUnknownFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="ResourceUnavailableFault" 
        message="wsrf-rw:ResourceUnavailableFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="InvalidResourcePropertyQNameFault" 
        message="wsrf-rpw:InvalidResourcePropertyQNameFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
    </wsdl:operation>
    <wsdl:operation name="QueryResourceProperties">
      <wsdl:input name="QueryResourcePropertiesRequest"
        message="wsrf-rpw:QueryResourcePropertiesRequest"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/QueryResourceProperties/QueryResourcePropertiesRequest"/>
      <wsdl:output name="QueryResourcePropertiesResponse"
        message="wsrf-rpw:QueryResourcePropertiesResponse"
        wsa:Action="http://docs.oasis-open.org/wsrf/rpw-2/QueryResourceProperties/QueryResourcePropertiesResponse"/>
      <wsdl:fault name="ResourceUnknownFault"
        message="wsrf-rw:ResourceUnknownFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="ResourceUnavailableFault" 
        message="wsrf-rw:ResourceUnavailableFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="InvalidResourcePropertyQNameFault" 
        message="wsrf-rpw:InvalidResourcePropertyQNameFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="UnknownQueryExpressionDialectFault" 
        message="wsrf-rpw:UnknownQueryExpressionDialectFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="InvalidQueryExpressionFault" 
        message="wsrf-rpw:InvalidQueryExpressionFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
      <wsdl:fault name="QueryEvaluationErrorFault" 
        message="wsrf-rpw:QueryEvaluationErrorFault"
        wsa:Action="http://docs.oasis-open.org/wsrf/fault"/>
    </wsdl:operation>
    <wsdl:operation name="CacheCheck">
      <wsdl:documentation>
        This will be give a solution to query that files are in the grid-manager cache or not. 
        The DataBroker will use it to sent the job where the data is.  
      </wsdl:documentation>
      <wsdl:input name="CacheCheckRequest"
        message="a-rex:CacheCheckRequest"/>
      <wsdl:output name="CacheCheckResponse"
        message="a-rex:CacheCheckResponse"/>
      <wsdl:fault name="CacheConfigurationFault"
        message="a-rex:CacheConfigurationFault"
        wsa:Action="http://www.nordugrid.org/schemas/a-rex/fault"/>
      <wsdl:fault name="CacheDisabledFault"
        message="a-rex:CacheDisabledFault"
        wsa:Action="http://www.nordugrid.org/schemas/a-rex/fault"/>
    </wsdl:operation>
    <wsdl:operation name="MigrateActivity">
      <wsdl:input name="MigrateActivity" message="a-rex:MigrateActivityRequest"/>  
      <wsdl:output name="MigrateActivityResponse" message="a-rex:MigrateActivityResponse"/>
      <wsdl:fault name="NotAuthorizedFault" 
         message="bes-factory:NotAuthorizedFault"
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="NotAcceptingNewActivitiesFault" 
         message="bes-factory:NotAcceptingNewActivitiesFault"
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="UnsupportedFeatureFault" 
         message="bes-factory:UnsupportedFeatureFault"
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
      <wsdl:fault name="InvalidRequestMessageFault"
         message="bes-factory:InvalidRequestMessageFault"
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortType/Fault"/>
    </wsdl:operation>
  </wsdl:portType>

  <wsdl:binding name="a-rex" type="a-rex:a-rex">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ChangeActivityStatus">
      <soap:operation soapAction="ChangeActivityStatus"/>
      <wsdl:input name="ChangeActivityStatusRequest">
         <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ChangeActivityStatusResponse">
         <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotAuthorizedFault">
        <soap:fault name="NotAuthorizedFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidActivityIdentifierFault">
        <soap:fault name="InvalidActivityIdentifierFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="CantApplyOperationToCurrentStateFault">
        <soap:fault name="CantApplyOperationToCurrentStateFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault">
        <soap:fault name="OperationWillBeAppliedEventuallyFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetResourcePropertyDocument">
      <soap:operation soapAction="GetResourcePropertyDocument"/>
      <wsdl:input name="GetResourcePropertyDocumentRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetResourcePropertyDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceUnknownFault">
        <soap:fault name="ResourceUnknownFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="ResourceUnavailableFault">
        <soap:fault name="ResourceUnavailableFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetResourceProperty">
      <soap:operation soapAction="GetResourceProperty"/>
      <wsdl:input name="GetResourcePropertyRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetResourcePropertyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceUnknownFault">
        <soap:fault name="ResourceUnknownFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="ResourceUnavailableFault">
        <soap:fault name="ResourceUnavailableFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetMultipleResourceProperties">
      <soap:operation soapAction="GetMultipleResourceProperties"/>
      <wsdl:input name="GetMultipleResourcePropertiesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetMultipleResourcePropertiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceUnknownFault">
        <soap:fault name="ResourceUnknownFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="ResourceUnavailableFault">
        <soap:fault name="ResourceUnavailableFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="QueryResourceProperties">
      <soap:operation soapAction="QueryResourceProperties"/>
      <wsdl:input name="QueryResourcePropertiesRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="QueryResourcePropertiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ResourceUnknownFault">
        <soap:fault name="ResourceUnknownFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="ResourceUnavailableFault">
        <soap:fault name="ResourceUnavailableFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="UnknownQueryExpressionDialectFault">
        <soap:fault name="UnknownQueryExpressionDialectFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidQueryExpressionFault">
        <soap:fault name="InvalidQueryExpressionFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="QueryEvaluationErrorFault">
        <soap:fault name="QueryEvaluationErrorFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CacheCheck">
      <soap:operation soapAction="CacheCheck"/>
      <wsdl:input name="CacheCheckRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CacheCheckResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CacheConfigurationFault">
        <soap:fault name="CacheConfigurationFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="CacheDisabledFault">
        <soap:fault name="CacheDisabledFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="MigrateActivity">
      <soap:operation soapAction="MigrateActivity" /> 
      <wsdl:input name="MigrateActivity">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="MigrateActivityResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="NotAuthorizedFault">
        <soap:fault name="NotAuthorizedFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="NotAcceptingNewActivitiesFault">
        <soap:fault name="NotAcceptingNewActivitiesFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="UnsupportedFeatureFault">
        <soap:fault name="UnsupportedFeatureFault" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="InvalidRequestMessageFault">
        <soap:fault name="InvalidRequestMessageFault" use="literal" />
      </wsdl:fault>
    </wsdl:operation> 
  </wsdl:binding>

  <wsdl:service name="a-rex">
    <wsdl:port name="delegation" binding="deleg:DelegationBinding">
      <soap:address location="http://localhost:80"/>
    </wsdl:port>
    <wsdl:port name="bes-factory" binding="bes-factory:BESFactoryBinding">
      <soap:address location="http://localhost:80"/>
    </wsdl:port>
    <!-- <wsdl:port name="bes-mgmt" binding="bes-mgmt:BESManagementBinding">
      <soap:address location="http://localhost:80"/>
    </wsdl:port>-->
    <wsdl:port name="a-rex" binding="a-rex:a-rex">
      <soap:address location="http://localhost:80"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
