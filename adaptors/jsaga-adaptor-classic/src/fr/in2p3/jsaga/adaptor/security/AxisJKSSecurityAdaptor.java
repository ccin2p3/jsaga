package fr.in2p3.jsaga.adaptor.security;

import java.util.Map;
import org.ogf.saga.context.Context;
import org.ogf.saga.error.IncorrectStateException;
import org.ogf.saga.error.NoSuccessException;

import fr.in2p3.jsaga.adaptor.base.defaults.Default;
import fr.in2p3.jsaga.adaptor.base.usage.UAnd;
import fr.in2p3.jsaga.adaptor.base.usage.UOptional;
import fr.in2p3.jsaga.adaptor.base.usage.Usage;

/* ***************************************************
* *** Centre de Calcul de l'IN2P3 - Lyon (France) ***
* ***             http://cc.in2p3.fr/             ***
* ***************************************************
* File:   AxisJKSSecurityAdaptor
* Author: Lionel Schwarz (lionel.schwarz@in2p3.fr)
* Date:   23 juin 2011
* ***************************************************/

/**
 * This adaptor must be used when the code has no access to the SSL factory
 * for example in case of using stubs generated by Axis.
 * In this case, keystore and truststore are set as system properties
 */
public class AxisJKSSecurityAdaptor extends JKSSecurityAdaptor {

	public String getType() {
    	return "AxisJKS";
    }

    public Default[] getDefaults(Map map) throws IncorrectStateException {
    	return new Default[]{};
    }

    public Usage getUsage() {
    	return new UAnd(
    			 new Usage[]{
    					 new UOptional(USER_ALIAS),
    					 new UOptional(Context.USERPASS)});
    }

    public SecurityCredential createSecurityCredential(int usage, Map attributes, String contextId) throws IncorrectStateException, NoSuccessException {
    	// keystore and truststore MUST NOT be define in configuration
		if (attributes.containsKey(KEYSTORE) || attributes.containsKey(KEYSTORE_PASS) || 
				attributes.containsKey(TRUSTSTORE) || attributes.containsKey(TRUSTSTORE_PASS)) {
			throw new IncorrectStateException("Keystore and Truststore values must be setup in system properties, not in the adaptor configuration");
		}
		return super.createSecurityCredential(usage, attributes, contextId);
    }

}
