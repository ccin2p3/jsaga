<?xml version="1.0" encoding="UTF-8"?>
<faqs title="Contributors Frequently Asked Questions">
    <part id="developing">
        <title>Developing adaptors</title>
        <faq id="adaptor-pre-requisites">
            <question>What are the pre-requisites for building JSAGA adaptors ?</question>
            <answer>
                <ul>
                    <li>Install <a href="http://www.oracle.com/technetwork/java/index.html">JDK 1.6</a> (or above)</li>
                    <li>Install <a href="http://maven.apache.org/download.html">Maven 3.0.4 (or above)</a></li>
                    <li>Install <a href="http://git-scm.com/">Git</a></li>
                </ul>
            </answer>
        </faq>
        <faq id="adaptor-create">
            <question>How to create a new adaptor for JSAGA ?</question>
            <answer>
                <ul>
                    <li>Install <a href="http://maven.in2p3.fr//org/apache/maven/archetypes/maven-archetype-jsaga/1.0/maven-archetype-jsaga-1.0.jar">JSAGA Archetype 1.0</a> (or later)
                        <pre>mvn install:install-file -DgroupId=org.apache.maven.archetypes \
-DartifactId=maven-archetype-jsaga -Dversion=1.0 -Dpackaging=jar \
-Dfile=maven-archetype-jsaga-1.0.jar</pre>
                    </li>
                    <li>Create the skeleton of your project
                        <pre>mvn archetype:generate -DarchetypeArtifactId=maven-archetype-jsaga</pre>
                    </li>
                    <li>Replace all occurences of CHANGE in file pom.xml</li>
                    <li>Rename and modify the class MyProtocolDataAdaptor
                        (see "<a href="contributors-guide.html">Contributors Guide</a>").
                    </li>
                    <li>Build your adaptor
                        <pre>mvn test</pre>
                    </li>
                </ul>
            </answer>
        </faq>
        <faq id="soap-debug">
        	<question>How to print Web service messages to a local file ?</question>
        	<answer>Add the following lines
        		<pre>log4j.rootLogger=DEBUG, A1

log4j.logger.org.apache.axis.transport.http.HTTPSender=DEBUG
log4j.appender.A1=org.apache.log4j.FileAppender
log4j.appender.A1.File=/tmp/ws.log
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%-4r [%t] %-5p %c %x  %m%n
        		
        		</pre>to the LOG4J configuration file
        		<pre>etc/log4j.properties</pre>
        		This will printout all web service messages into /tmp/ws.log. You can use another Appender.
        	</answer>
        </faq>
        <faq id="git">
            <question>How to push my contribution to GIT ?</question>
            <answer>
              <ul>
                <li>Make sure you have an account on https://gitlab.in2p3.fr. If not, please ask one.</li>
                <li>Fork the project at https://gitlab.in2p3.fr/cc-in2p3-dev/jsaga</li>
                <li>Ask for a pull request for your contribution to be integrated into the main trunk</li>
              </ul>
            </answer>
        </faq>
        <faq id="eclipse">
            <question>How to import the maven project into Eclipse (http://www.eclipse.org/) ?</question>
            <answer>
Either generate Eclipse project from maven CLI:
                <ul>
                    <li>Set the Eclipse "Classpath Variable" M2_REPO to the path of your maven local repository.</li>
                    <li><pre>mvn install
mvn -s profiles.xml eclipse:eclipse</pre></li>
                    <li>File / import existing projects into workspace and select the jsaga directory.</li>
                    <li>(for more information see: http://maven.apache.org/guides/mini/guide-ide-eclipse.html
http://laurent.granie.free.fr/index.php?2006/12/13/25-maven2-et-eclipse)</li>
                </ul>
Or install and use the plugin Q (http://code.google.com/p/q4e/)
            </answer>
        </faq>
    </part>
    <part id="testing">
        <title>Testing adaptors</title>
        <faq id="adaptor-integration-test">
            <question>How to run integration tests ?</question>
            <answer>
                <ul>
                    <li><b>From your build environment:</b>
                        <p>Most adaptors allow for listing available tests:</p>
                        <pre>ls test/src/integration/
mvn integration-test -Dtest={integration.MyProtocolIntegrationTestSuite}\$index</pre>
                        <p>To run {SubTest1} only, enter:</p>
                        <pre>mvn integration-test -Dtest={integration.MyProtocolIntegrationTestSuite\$SubTest1}</pre>
                        <p>Errors are logged into build/surefire-reports/{integration.MyProtocolIntegrationTestSuite$SubTest1}.txt</p>
                        <p><i>Note: On Unix-like operating systems, the '$' must be escaped ('\$').</i></p>
                    </li>
                    <li><b>From an installation of JSAGA:</b>
                        <p>To run {MyProtocolIntegrationTestSuite}, enter:</p>
                        <pre>junit-run-test {integration.MyProtocolIntegrationTestSuite}</pre>
                        <p>Errors are displayed on console.</p>
                    </li>
                </ul>
            </answer>
        </faq>
        <faq id="configure-test-suite">
            <question>How to configure test-suite ?</question>
            <answer>There are 4 configuration files:
                <ul>
                    <li><i>test/resources/etc/jsaga-config.properties</i>: is not used by test-suite (used when testing your configuration with JSAGA CLIs).</li>
                    <li><i>test/resources/etc/jsaga-default-contexts.xml</i>: configures your adaptor and its security context.</li>
                    <li><i>test/resources/etc/log4j.properties</i>: configures log severity thresholds for test-suite.</li>
                    <li><i>test/resources/saga-test.properties</i>: configures the test-suite (i.e. URLs and test parameters).</li>
                </ul>
                Content of file saga-test.properties depends on the type of adaptor:
                <ul>
                    <li>For a security adaptor:
                        <pre># can be empty</pre>
                    </li>
                    <li>For a data adaptor:
                        <pre><i>myprotocol</i>.base.url=uri://...
<i>myprotocol</i>.base2.url=uri://...
test.base.url=test://emulator.test.org:1234/</pre>
                    </li>
                    <li>For a job adaptor:
                        <pre><i>myprotocol</i>.jobservice.url=uri://...
# optional test parameters:
<i>myprotocol</i>.finalyTimeout=...
<i>myprotocol</i>.maxQueuingTime=...
<i>myprotocol</i>.candidate.host=...</pre>
                    </li>
                </ul>
            </answer>
        </faq>
        <faq id="create-test-entries">
            <question>How to create files and directories for data test suite ?</question>
            <answer><pre>mkdir -p dir/subdir ; echo "Content of file 1..." > dir/subdir/file1.txt
mkdir -p dir2/subdir ; echo "Content of file 2 on base2.url..." > dir2/subdir/file2.txt</pre>
            </answer>
        </faq>
    </part>
</faqs>