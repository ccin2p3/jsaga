Deviations from SAGA specifications

* Security management

    * Context attributes added to get some control on context selection

        * UrlPrefix: the identifier of the context within the session.
          When added at the beginning of the URL (e.g. MyCtx-protocol://hostname), it tells to JSAGA ot use this context for this URL.

        * BaseUrlIncludes: the URL patterns that will select this context when matched.

        * BaseUrlExcludes: the URL patterns that will exclude this context from selection when matched.

        * ServiceAttributes: the configuration of data and execution services associated with this context.

    * Methods

        * toString(): overrided to dump a description of the security context instance.

* Data management

    * URL

        * Scheme (...://) at the beginning of URL can be prefixed by a context name to force usage of this context.

        * Query (?...) at the end of URL refers to adaptor-specific parameters.
        
        * Path can be relative (<scheme>://./<path>).

    * Constructor flags

        * FLAGS_BYPASSEXIST=4096: added to disable existence check when creating NSEntry instances.
          <(NOTE: an IncorrectState exception embedding a DoesNotExist exception may be thrown on subsequent method invocations)>

    * Methods

        * copyFrom() (<<deprecated>>): added to copy remote source entry to current entry (for optimization purposes).
          <(NOTE: This method is accessible by casting NSEntry instances to AbstractNSEntryImpl and NSDirectory instances to AbstractNSDirectoryImpl)>

        * NSEntry.remove(): allow no RECURSIVE flag for directory (for enabling "rmdir-like" behavior).

* Job management

    * Job description attributes

        * JobStartTime: not supported
          <(NOTE: this attribute is ’not supported by JSDL and might disappear in future versions of the SAGA API)>

        * JobContact: not supported
          <(NOTE: this attribute is ’not supported by JSDL and might disappear in future versions of the SAGA API)>

        * CPUArchitecture: defined as scalar attribute
          <(NOTE: for compliance with JSDL)>

        * OperatingSystemType: defined as scalar attribute
          <(NOTE: for compliance with JSDL)>

    * Job attributes

        * NativeJobDescription: added

    * Metrics

        * job.sub_state (<<deprecated>>): added

* Streams, Remote Procedure Call

    * Will not be implemented.
