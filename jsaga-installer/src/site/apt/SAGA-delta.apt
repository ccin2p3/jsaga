Deviations from SAGA specifications

* Security management

    * Context.TYPE: may refer to one of the configured security contexts
      (JSAGA supports several configuration of the same context type).

    * Override method toString(): this dump a description of the security context instance.

* Data management

    * URL

        * Query (?...) at the end of URL refers to adaptor-specific parameters

        * Fragment (#...) at the end of URL refers to a specific configuration of the protocol

        * Class URL is modified to support relative paths (<scheme>://./<path>) and to be extendable
          <(NOTE: this is the only modification made on the SAGA Java Binding, and it will disappear when a URL factory will be provided)>

    * Add flag (FLAGS_BYPASSEXIST=4096) to disable existence check when creating NSEntry instances
      (then an IncorrectState exception embedding a DoesNotExist exception may be thrown on subsequent method invocations).

    * Add some methods to enable reducing the number of messages with the server. These methods are accessible
      by casting NSEntry instances to AbstractNSEntryImpl and NSDirectory instances to AbstractNSDirectoryImpl.

        * exist(): Check if current entry exist (use this if created with flag FLAGS_BYPASSEXIST).

        * copyFrom(): Copy remote source entry to current entry.

    * Few differences in implementation of behavior with some flags (see comments in source code)

        * NSEntry.remove() allow no RECURSIVE flag for directory in order to enable "rmdir-like" behavior.

* Job management

    * Some job description attributes are not supported by JSAGA.
      Attributes marked as ’not supported by JSDL’ might disappear in future versions of the SAGA API.

        * Interactive (will be supported in the future)

        * JobStartTime (not supported by JSDL)

        * JobContact (not supported by JSDL)

* Streams, Remote Procedure Call

    * Will not be implemented.
